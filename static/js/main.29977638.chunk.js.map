{"version":3,"sources":["components/SideBar/SideBar.module.scss","pages/Settings.module.scss","components/ToDoo/ToDoos.module.scss","layouts/MainLayout.module.scss","pages/MainPage.module.scss","components/ToDoo/oneToDoo/index.module.scss","components/SideBar/SideBar.tsx","hooks/useTypedSelector.ts","redux/Reducers/SideBar.tsx","layouts/MainLayout.tsx","hooks/useTimer.ts","redux/Reducers/ToDoo.tsx","components/ToDoo/oneToDoo/index.tsx","components/ToDoo/ToDoos.tsx","pages/MainPage.tsx","redux/Reducers/Timer.tsx","pages/Settings.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["module","exports","SideBar","sideBarOpen","className","classNames","styles","sideBar","active","sideBar__navigation","sideBar__link","to","icon","faHome","color","faCog","useTypedSelector","useSelector","createSlice","name","initialState","isActive","reducers","handleSideBar","state","actions","MainLayout","children","dispatch","useDispatch","button","onClick","faTimes","faBars","wrapper","useTimer","timer","useState","intervalId","setIntervalId","workLength","timeLeft","setTimeLeft","session","setSession","effect","breakLength","handleTimerClick","clearInterval","undefined","newIntervalId","setInterval","handleToDoo","activeRecords","doneRecords","data","index","type","value","addRecord","action","push","payload","deleteRecord","splice","addToDoneRecords","OneToDoo","oneToDo","faCheck","ToDo","setValue","records","toDoo","todoo","todoo__menu","onChange","e","String","target","disabled","todoo__activeElements","map","record","todoo__doneElements","Timer","useHook","useEffect","MinutesLeft","moment","duration","minutes","SecondsLeft","seconds","handleTimer","setTimer","setWorkLength","setBreakLength","Settings","defaultValues","work","break","values","setValues","handleInput","Number","Logo","settings","settings__workTime","settings__div","App","path","element","MainPage","rootReducer","combineReducers","ToDoo","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29977638.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideBar\":\"SideBar_sideBar__3FoQV\",\"sideBar__navigation\":\"SideBar_sideBar__navigation__1Spzk\",\"sideBar__link\":\"SideBar_sideBar__link__f8tsc\",\"active\":\"SideBar_active__2J5RM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Settings_Logo__IlNmT\",\"settings\":\"Settings_settings__2nncu\",\"settings__div\":\"Settings_settings__div__3jDXa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoo\":\"ToDoos_todoo__2RhrP\",\"todoo__menu\":\"ToDoos_todoo__menu__2Gm3d\",\"todoo__activeElements\":\"ToDoos_todoo__activeElements__34xM5\",\"todoo__doneElements\":\"ToDoos_todoo__doneElements__1Kbv1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MainLayout_wrapper__1_Dtz\",\"button\":\"MainLayout_button__2w_Zk\",\"active\":\"MainLayout_active__1BHEn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MainPage_wrapper__-izsx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"oneToDo\":\"oneToDoo_oneToDo__1oX2b\"};","import { faCog, faHome } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport classNames from \"classnames\";\r\nimport { FC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./SideBar.module.scss\";\r\ninterface IProps {\r\n    sideBarOpen: boolean;\r\n}\r\n\r\nconst SideBar: FC<IProps> = ({ sideBarOpen }) => {\r\n    return (\r\n        <div\r\n            className={classNames(styles.sideBar, {\r\n                [styles.active]: sideBarOpen === true,\r\n            })}\r\n        >\r\n            <nav className={styles.sideBar__navigation}>\r\n                <Link className={styles.sideBar__link} to=\"/\">\r\n                    <FontAwesomeIcon icon={faHome} color={\"white\"} />\r\n                    Home\r\n                </Link>\r\n                <Link className={styles.sideBar__link} to=\"/settings\">\r\n                    <FontAwesomeIcon icon={faCog} color={\"white\"} />\r\n                    Settings\r\n                </Link>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SideBar;\r\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { rootState } from \"../redux/store\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<rootState> = useSelector;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\ninterface IInitial {\r\n  isActive: boolean;\r\n}\r\n\r\nconst initialState: IInitial = {\r\n  isActive: false,\r\n};\r\n\r\nconst sideBar = createSlice({\r\n  name: \"createSlece\",\r\n  initialState,\r\n  reducers: {\r\n    handleSideBar(state) {\r\n      state.isActive = !state.isActive;\r\n    },\r\n  },\r\n});\r\n\r\nexport default sideBar.reducer;\r\nexport const { handleSideBar } = sideBar.actions;\r\n","import classNames from \"classnames\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport SideBar from \"../components/SideBar/SideBar\";\r\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\r\nimport { handleSideBar } from \"../redux/Reducers/SideBar\";\r\nimport styles from \"./MainLayout.module.scss\";\r\nimport { faBars, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst MainLayout = ({ children }: any) => {\r\n    const isActive = useTypedSelector((state) => state.sideBar.isActive);\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <>\r\n            <SideBar sideBarOpen={isActive} />\r\n            <button\r\n                className={classNames(styles.button, {\r\n                    [styles.active]: isActive === true,\r\n                })}\r\n                onClick={() => dispatch(handleSideBar())}\r\n            >\r\n                {isActive ? (\r\n                    <FontAwesomeIcon icon={faTimes}  />\r\n                ) : (\r\n                    <FontAwesomeIcon icon={faBars}  />\r\n                )}\r\n            </button>\r\n            <div className={styles.wrapper}>{children}</div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MainLayout;\r\n","import React, { useState } from \"react\";\r\nimport { useTypedSelector } from \"./useTypedSelector\";\r\n\r\nconst useTimer = () => {\r\n    const timer = useTypedSelector((state) => state.timer);\r\n    const [intervalId, setIntervalId] = useState<NodeJS.Timeout>();\r\n    const [timeLeft, setTimeLeft] = useState(timer.workLength);\r\n    const [session, setSession] = useState(\"session\");\r\n\r\n    const handleTimerClick = () => {\r\n        if (intervalId) {\r\n            clearInterval(intervalId);\r\n            setIntervalId(undefined);\r\n            setTimeLeft(timer.workLength);\r\n            return;\r\n        }\r\n        const newIntervalId = setInterval(() => {\r\n            setTimeLeft((timeLeft) => {\r\n                if (timeLeft > 0) {\r\n                    return timeLeft - 1;\r\n                }\r\n                return timeLeft;\r\n            });\r\n        }, 1000);\r\n        setIntervalId(newIntervalId);\r\n    };\r\n\r\n    const effect = () => {\r\n        if (timeLeft === 0) {\r\n            if (session === \"session\") {\r\n                setSession(\"break\");\r\n                setTimeLeft(timer.breakLength);\r\n            } else if (session === \"break\") {\r\n                setSession(\"session\");\r\n                setTimeLeft(timer.workLength);\r\n            }\r\n        }\r\n    };\r\n    return { effect, handleTimerClick, timeLeft, intervalId, session };\r\n};\r\n\r\nexport default useTimer;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { IAdd } from \"../../types/Add\";\r\n\r\ninterface IInitial {\r\n    activeRecords: string[];\r\n    doneRecords: string[];\r\n    data: IAdd;\r\n}\r\n\r\nconst initialState: IInitial = {\r\n    activeRecords: [],\r\n    doneRecords: [],\r\n    data: {\r\n        index: 2,\r\n        type: \"\",\r\n        value: \"\",\r\n    },\r\n};\r\n\r\nconst handleToDoo = createSlice({\r\n    name: \"handleTimer\",\r\n    initialState,\r\n    reducers: {\r\n        addRecord(state, action: PayloadAction<string>) {\r\n            state.activeRecords.push(action.payload);\r\n        },\r\n        deleteRecord(state, action: PayloadAction<IAdd>) {\r\n            if (action.payload.type === \"active\")\r\n                state.activeRecords.splice(action.payload.index, 1);\r\n            else state.doneRecords.splice(action.payload.index, 1);\r\n        },\r\n        addToDoneRecords(state, action: PayloadAction<IAdd>) {\r\n            state.doneRecords.push(action.payload.value!);\r\n            state.activeRecords.splice(action.payload.index, 1);\r\n        },\r\n    },\r\n});\r\n\r\nexport default handleToDoo.reducer;\r\nexport const { addRecord, deleteRecord, addToDoneRecords } =\r\n    handleToDoo.actions;\r\n","import { faCheck, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { FC } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addToDoneRecords, deleteRecord } from \"../../../redux/Reducers/ToDoo\";\r\nimport styles from \"./index.module.scss\";\r\ninterface IProps {\r\n    value: string;\r\n    index: number;\r\n    type: string;\r\n}\r\nconst OneToDoo: FC<IProps> = ({ value, index, type }) => {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div className={styles.oneToDo}>\r\n            <div>{value}</div>\r\n            {type === \"done\" ? (\r\n                \"\"\r\n            ) : (\r\n                <button\r\n                    onClick={() =>\r\n                        dispatch(\r\n                            addToDoneRecords({\r\n                                value,\r\n                                index,\r\n                            })\r\n                        )\r\n                    }\r\n                >\r\n                    <FontAwesomeIcon icon={faCheck} />\r\n                </button>\r\n            )}\r\n            <button onClick={() => dispatch(deleteRecord({ index, type }))}>\r\n                <FontAwesomeIcon icon={faTimes} />\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OneToDoo;\r\n","import { FC, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { addRecord } from \"../../redux/Reducers/ToDoo\";\r\nimport OneToDoo from \"./oneToDoo\";\r\nimport styles from \"./ToDoos.module.scss\";\r\n\r\nconst ToDo: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const [value, setValue] = useState<string>(\"\");\r\n    const records = useTypedSelector((state) => state.toDoo);\r\n    const handleInput: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        setValue(String(e.target.value));\r\n    };\r\n    return (\r\n        <div className={styles.todoo}>\r\n            <div className={styles.todoo__menu}>\r\n                <input type=\"text\" onChange={handleInput} value={value} />\r\n                <button\r\n                    disabled={value ? false : true}\r\n                    onClick={() => {\r\n                        dispatch(addRecord(value));\r\n                    }}\r\n                >\r\n                    Add\r\n                </button>\r\n            </div>\r\n            <div className={styles.todoo__activeElements}>\r\n                <p>Active Elemnts</p>\r\n                {records.activeRecords.map((record, index) => {\r\n                    return (\r\n                        <OneToDoo\r\n                            type={\"active\"}\r\n                            index={index}\r\n                            value={record}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n            <div className={styles.todoo__doneElements}>\r\n                <p>Done elements</p>\r\n                {records.doneRecords.map((record, index) => {\r\n                    return (\r\n                        <OneToDoo type={\"done\"} index={index} value={record} />\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToDo;\r\n","import MainLayout from \"../layouts/MainLayout\";\r\nimport { useEffect } from \"react\";\r\nimport useHook from \"../hooks/useTimer\";\r\nimport styles from \"./MainPage.module.scss\";\r\nimport ToDo from \"../components/ToDoo/ToDoos\";\r\nimport moment from \"moment\";\r\n\r\nconst Timer = () => {\r\n    const { handleTimerClick, effect, timeLeft, intervalId, session } =\r\n        useHook();\r\n    useEffect(() => {\r\n        effect();\r\n    }, [effect]);\r\n    let MinutesLeft = moment.duration(timeLeft, \"s\").minutes();\r\n    let SecondsLeft = moment.duration(timeLeft, \"s\").seconds();\r\n    return (\r\n        <MainLayout>\r\n            <div className={styles.wrapper}>\r\n                <main>\r\n                    <p>{session === \"session\" ? \"Work time\" : \"Break Time\"}</p>\r\n                    <p>\r\n                        {MinutesLeft < 10 ? `0${MinutesLeft}` : MinutesLeft}:\r\n                        {SecondsLeft < 10 ? `0${SecondsLeft}` : SecondsLeft}\r\n                    </p>\r\n                    <button\r\n                        onClick={() => {\r\n                            handleTimerClick();\r\n                        }}\r\n                    >\r\n                        {intervalId ? \"Stop\" : \"Start\"}\r\n                    </button>\r\n                </main>\r\n                <ToDo />\r\n            </div>\r\n        </MainLayout>\r\n    );\r\n};\r\n\r\nexport default Timer;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\ninterface IInitial {\r\n    isActive: boolean;\r\n    workLength: number;\r\n    breakLength: number;\r\n}\r\n\r\nconst initialState: IInitial = {\r\n    isActive: false,\r\n    workLength: 1800,\r\n    breakLength: 300,\r\n};\r\n\r\nconst handleTimer = createSlice({\r\n    name: \"handleTimer\",\r\n    initialState,\r\n    reducers: {\r\n        setTimer(state) {\r\n            state.isActive = !state.isActive;\r\n        },\r\n        setWorkLength(state, action: PayloadAction<number>) {\r\n            state.workLength = action.payload * 60;\r\n        },\r\n        setBreakLength(state, action: PayloadAction<number>) {\r\n            state.breakLength = action.payload * 60;\r\n        },\r\n    },\r\n});\r\n\r\nexport default handleTimer.reducer;\r\nexport const { setTimer, setWorkLength, setBreakLength } = handleTimer.actions;\r\n","import moment from \"moment\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\r\nimport MainLayout from \"../layouts/MainLayout\";\r\nimport { setBreakLength, setWorkLength } from \"../redux/Reducers/Timer\";\r\nimport styles from \"./Settings.module.scss\";\r\n\r\nconst Settings = () => {\r\n    const defaultValues = useTypedSelector((state) => state.timer);\r\n    const [values, setValues] = useState({\r\n        work: moment.duration(defaultValues.workLength, \"s\").minutes(),\r\n        break: moment.duration(defaultValues.breakLength, \"s\").minutes(),\r\n    });\r\n    const dispatch = useDispatch();\r\n    const handleInput: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        setValues({ ...values, [e.target.name]: Number(e.target.value) });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <MainLayout>\r\n                <p className={styles.Logo}>Settings</p>\r\n                <div className={styles.settings}>\r\n                    <div\r\n                        className={`${styles.settings__workTime} ${styles.settings__div}`}\r\n                    >\r\n                        <p>Work Time</p>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={values.work}\r\n                            name=\"work\"\r\n                            onChange={handleInput}\r\n                        />\r\n                        <button\r\n                            onClick={() => {\r\n                                dispatch(setWorkLength(values.work));\r\n                            }}\r\n                        >\r\n                            Set\r\n                        </button>\r\n                    </div>\r\n                    <div className={styles.settings__div}>\r\n                        <p>Break Time</p>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={values.break}\r\n                            name=\"break\"\r\n                            onChange={handleInput}\r\n                        />\r\n                        <button\r\n                            onClick={() => {\r\n                                dispatch(setBreakLength(values.break));\r\n                            }}\r\n                        >\r\n                            Set\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </MainLayout>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Settings;\r\n","import { Routes, Route } from \"react-router\";\nimport MainPage from \"./pages/MainPage\";\nimport Settings from \"./pages/Settings\";\nimport \"./App.scss\";\n\nfunction App() {\n    return (\n        <div>\n            <Routes>\n                <Route path=\"/\" element={<MainPage />} />\n                <Route path=\"/settings\" element={<Settings />} />\n            </Routes>\n        </div>\n    );\n}\n\nexport default App;\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport thunk from \"redux-thunk\";\r\nimport sideBar from \"./Reducers/SideBar\";\r\nimport handleTimer from \"./Reducers/Timer\";\r\nimport ToDoo from \"./Reducers/ToDoo\";\r\n\r\nconst rootReducer = combineReducers({\r\n    sideBar: sideBar,\r\n    timer: handleTimer,\r\n    toDoo: ToDoo,\r\n});\r\nexport type rootState = ReturnType<typeof rootReducer>;\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(thunk),\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}